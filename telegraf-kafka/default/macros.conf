# macros.conf

#  ___           _                       __
# |_ _|_ __   __| | _____  _____  ___   / _| ___  _ __
#  | || '_ \ / _` |/ _ \ \/ / _ \/ __| | |_ / _ \| '__|
#  | || | | | (_| |  __/>  <  __/\__ \ |  _| (_) | |
# |___|_| |_|\__,_|\___/_/\_\___||___/ |_|  \___/|_|
#
#  _____    _                       __                  _        _
# |_   _|__| | ___  __ _ _ __ __ _ / _|  _ __ ___   ___| |_ _ __(_) ___ ___
#   | |/ _ \ |/ _ \/ _` | '__/ _` | |_  | '_ ` _ \ / _ \ __| '__| |/ __/ __|
#   | |  __/ |  __/ (_| | | | (_| |  _| | | | | | |  __/ |_| |  | | (__\__ \
#   |_|\___|_|\___|\__, |_|  \__,_|_|   |_| |_| |_|\___|\__|_|  |_|\___|___/
#                  |___/

# metrics indexes, the definition should match all metrics indexes

[telegraf_kafka_index]
definition = index="telegraf_kafka"
iseval = 0


#   ___                       _
#  / _ \__   _____ _ ____   _(_) _____      __  _ __   __ _  __ _  ___
# | | | \ \ / / _ \ '__\ \ / / |/ _ \ \ /\ / / | '_ \ / _` |/ _` |/ _ \
# | |_| |\ V /  __/ |   \ V /| |  __/\ V  V /  | |_) | (_| | (_| |  __/
#  \___/  \_/ \___|_|    \_/ |_|\___| \_/\_/   | .__/ \__,_|\__, |\___|
#                                              |_|          |___/

# Modify this macro to filter out the environment and label tags on the overview page

[overview_page_filters]
definition = env=* label=*
iseval = 0

# metrics constraints for Kafka broker monitoring main KPI basesearch
[telegraf_kafka_monitoring_kpi_constraints]
definition = metric_name="kafka_topics.MessagesInPerSec.OneMinuteRate"\
OR metric_name="kafka_topics.BytesInPerSec.OneMinuteRate"\
OR metric_name="kafka_topics.BytesOutPerSec.OneMinuteRate"\
OR metric_name="kafka_replica_manager.IsrShrinksPerSec.OneMinuteRate"\
OR metric_name="kafka_replica_manager.LeaderCount.Value"\
OR metric_name="kafka_replica_manager.PartitionCount.Value"\
OR metric_name="kafka_topic.TotalProduceRequestsPerSec.OneMinuteRate"\
OR metric_name="kafka_topic.TotalFetchRequestsPerSec.OneMinuteRate"\
OR metric_name="kafka_topic.FailedProduceRequestsPerSec.OneMinuteRate"\
OR metric_name="kafka_topic.FailedFetchRequestsPerSec.OneMinuteRate"\
OR metric_name="kafka_jvm_garbage_collector.LastGcInfo.duration"\
OR metric_name="kafka_replica_manager.UnderReplicatedPartitions.Value"\
OR metric_name="kafka_controller.OfflinePartitionsCount.Value"\
OR metric_name="kafka_controller.ActiveControllerCount.Value"
iseval = 0

#  __  __             _ _             _                   _        _
# |  \/  | ___  _ __ (_) |  ___  _ __(_)_ __   __ _   ___| |_ __ _| |_ ___
# | |\/| |/ _ \| '_ \| | __/ _ \| '__| | '_ \ / _` | / __| __/ _` | __/ _ \
# | |  | | (_) | | | | | || (_) | |  | | | | | (_| | \__ \ || (_| | ||  __/
# |_|  |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, | |___/\__\__,_|\__\___|
#                                             |___/

# These macros define the default monitoring state for the detected components

# Zookeeper
[zookeeper_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Kafka Brokers
[kafka_broker_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Kafka Connect workers
[kafka_connect_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Confluent Schema registry
[schema_registry_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Confluent ksql-server
[ksql_server_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Confluent kafka-rest
[kafka_rest_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# LinkedIn kafka-monitor
[kafka_monitor_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Kafka topics
[kafka_topics_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Kafka Connect tasks
[kafka_connect_tasks_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Kafka nodes number monitoring
[nodes_number_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

# Kafka Burrow consumers monitoring
[kafka_burrow_consumers_default_monitoring_state]
definition = eval monitoring_state="enabled"
iseval = 0

#  _____ _
# |_   _(_)_ __ ___   ___   ___ _ __   __ _ _ __
#   | | | | '_ ` _ \ / _ \ / __| '_ \ / _` | '_ \
#   | | | | | | | | |  __/ \__ \ |_) | (_| | | | |
#   |_| |_|_| |_| |_|\___| |___/ .__/ \__,_|_| |_|
#                              |_|
#

#########################################
#	Custom Span Macro Definition
#########################################

#################
# CUSTOMIZATION:
#################


# If you want to set a minimal span feature that better fits your data, such as 5mn between 2 measures for example, please:
# - Copy the 2 customspan macros to your local/macros.conf
# - Edit the line:

#  | eval span=if(spanrestricted <= 20, "20s", span)\

# And replace with: (example with 5 minutes span, time unit is in seconds)

#  | eval span=if(spanrestricted <= (5*60), "5m", span)\

[telegraf_kafka_span]
definition = [ | stats count | addinfo\
| eval earliest=if(info_min_time == "0.000", info_search_time,info_min_time)\
| eval latest=if(info_max_time == "+Infinity", info_search_time,info_max_time)\
| eval searchStartTIme=strftime(earliest,"%a %d %B %Y %H:%M")\
| eval searchEndTime=strftime(latest,"%a %d %B %Y %H:%M")\
| eval Difference = (latest - earliest)\
| eval span=case(\
info_min_time == "0.000", "2m",\
Difference > (3000*24*60*60),"4d",\
Difference > (2000*24*60*60),"3d",\
Difference > (1000*24*60*60),"2d",\
Difference > (500*24*60*60),"1d",\
Difference > (333*24*60*60),"12h",\
Difference > (166*24*60*60),"8h",\
Difference > (83*24*60*60),"4h",\
Difference > (41*24*60*60),"2h",\
Difference > (916*60*60),"1h",\
Difference > (833*60*60),"55m",\
Difference > (750*60*60),"50m",\
Difference > (666*60*60),"45m",\
Difference > (583*60*60),"40m",\
Difference > (500*60*60),"35m",\
Difference > (416*60*60),"30m",\
Difference > (333*60*60),"25m",\
Difference > (250*60*60),"20m",\
Difference > (166*60*60),"15m",\
Difference > (83*60*60),"10m",\
Difference > (66*60*60),"5m",\
Difference > (50*60*60),"4m",\
Difference > (33*60*60),"3m",\
Difference > (16*60*60),"2m",\
Difference > (8*60*60),"1m",\
Difference <= (8*60*60),"1m"\
)\
| eval spanrestricted=case(\
info_min_time == "0.000", 2*60,\
Difference > (916*60*60),60*60,\
Difference > (833*60*60),55*60,\
Difference > (750*60*60),50*60,\
Difference > (666*60*60),45*60,\
Difference > (583*60*60),40*60,\
Difference > (500*60*60),35*60,\
Difference > (416*60*60),30*60,\
Difference > (333*60*60),25*60,\
Difference > (250*60*60),20*60,\
Difference > (166*60*60),15*60,\
Difference > (83*60*60),10*60,\
Difference > (66*60*60),5*60,\
Difference > (50*60*60),4*60,\
Difference > (33*60*60),180,\
Difference > (16*60*60),120,\
Difference > (8*60*60),60,\
Difference <= (8*60*60),60\
)\
| eval span=case(spanrestricted < interval, interval, spanrestricted >= interval, span, isnull(interval), span)\
| eval span=if(spanrestricted <= 60, "1m", span)\
| return span ]
iseval = 0


#  _  __      __ _           _
# | |/ /__ _ / _| | ____ _  | | ___   __ _ ___
# | ' // _` | |_| |/ / _` | | |/ _ \ / _` / __|
# | . \ (_| |  _|   < (_| | | | (_) | (_| \__ \
# |_|\_\__,_|_| |_|\_\__,_| |_|\___/ \__, |___/
#                                    |___/
#                              _
#  _ __ ___   __ _ _ __  _ __ (_)_ __   __ _
# | '_ ` _ \ / _` | '_ \| '_ \| | '_ \ / _` |
# | | | | | | (_| | |_) | |_) | | | | | (_| |
# |_| |_| |_|\__,_| .__/| .__/|_|_| |_|\__, |
#                 |_|   |_|            |___/
#

# The following macros are being used by components entity views to map components retrieved from metrics to components log owners
# Provided as macros, these can be customized easily for an integration with a Splunk UF less implementation, or specific modifications

#  _____           _
# |__  /___   ___ | | _____  ___ _ __   ___ _ __
#   / // _ \ / _ \| |/ / _ \/ _ \ '_ \ / _ \ '__|
#  / /| (_) | (_) |   <  __/  __/ |_) |  __/ |
# /____\___/ \___/|_|\_\___|\___| .__/ \___|_|
#                               |_|

[zookeeper_logs_mapping(3)]
args = env, label, jolokia_agent_url
definition = inputlookup kafka_infra_inventory | search role=zookeeper env=$env$ label=$label$ name=$jolokia_agent_url$ | rex field=name "//(?<zookeeper>[^:]*)\:" | table zookeeper | rename zookeeper as host
iseval = 0

#  _  __      __ _           _               _
# | |/ /__ _ / _| | ____ _  | |__  _ __ ___ | | _____ _ __ ___
# | ' // _` | |_| |/ / _` | | '_ \| '__/ _ \| |/ / _ \ '__/ __|
# | . \ (_| |  _|   < (_| | | |_) | | | (_) |   <  __/ |  \__ \
# |_|\_\__,_|_| |_|\_\__,_| |_.__/|_|  \___/|_|\_\___|_|  |___/
#

[kafka_broker_logs_mapping(3)]
args = env, label, jolokia_agent_url
definition = inputlookup kafka_infra_inventory | search role=kafka_broker env=$env$ label=$label$ name=$jolokia_agent_url$ | rex field=name "//(?<kafka_broker>[^:]*)\:" | table kafka_broker | rename kafka_broker as host
iseval = 0

#  _  __      __ _            ____                            _
# | |/ /__ _ / _| | ____ _   / ___|___  _ __  _ __   ___  ___| |_
# | ' // _` | |_| |/ / _` | | |   / _ \| '_ \| '_ \ / _ \/ __| __|
# | . \ (_| |  _|   < (_| | | |__| (_) | | | | | | |  __/ (__| |_
# |_|\_\__,_|_| |_|\_\__,_|  \____\___/|_| |_|_| |_|\___|\___|\__|
#

[kafka_connect_logs_mapping(3)]
args = env, label, jolokia_agent_url
definition = inputlookup kafka_infra_inventory | search role=kafka_connect env=$env$ label=$label$ name=$jolokia_agent_url$ | rex field=name "//(?<kafka_connect>[^:]*)\:" | table kafka_connect | rename kafka_connect as host
iseval = 0

#  _  __      __ _            ____                            _
# | |/ /__ _ / _| | ____ _   / ___|___  _ __  _ __   ___  ___| |_
# | ' // _` | |_| |/ / _` | | |   / _ \| '_ \| '_ \ / _ \/ __| __|
# | . \ (_| |  _|   < (_| | | |__| (_) | | | | | | |  __/ (__| |_
# |_|\_\__,_|_| |_|\_\__,_|  \____\___/|_| |_|_| |_|\___|\___|\__|
#
#  _            _
# | |_ __ _ ___| | _____
# | __/ _` / __| |/ / __|
# | || (_| \__ \   <\__ \
#  \__\__,_|___/_|\_\___/
#
#   ______                              ______  _       _   __
#  / / ___|  ___  _   _ _ __ ___ ___   / / ___|(_)_ __ | | _\ \
# | |\___ \ / _ \| | | | '__/ __/ _ \ / /\___ \| | '_ \| |/ /| |
# | | ___) | (_) | |_| | | | (_|  __// /  ___) | | | | |   < | |
# | ||____/ \___/ \__,_|_|  \___\___/_/  |____/|_|_| |_|_|\_\| |
#  \_\                                                      /_/
#

[kafka_connect_sink_logs_mapping(3)]
args = env, label, connector
definition = inputlookup kafka_connect_tasks_monitoring | search role="kafka_sink_task" env=$env$ label=$label$ connector=$connector$ | table connector | rename connector as connector_sink
iseval = 0

[kafka_connect_source_logs_mapping(3)]
args = env, label, connector
definition = inputlookup kafka_connect_tasks_monitoring | search role="kafka_source_task" env=$env$ label=$label$ connector=$connector$ | table connector | rename connector as connector_source
iseval = 0

#   ____             __ _                  _
#  / ___|___  _ __  / _| |_   _  ___ _ __ | |_
# | |   / _ \| '_ \| |_| | | | |/ _ \ '_ \| __|
# | |__| (_) | | | |  _| | |_| |  __/ | | | |_
#  \____\___/|_| |_|_| |_|\__,_|\___|_| |_|\__|
#
#  _  __      __ _           ____       _                                ____            _     _
# | |/ /__ _ / _| | ____ _  / ___|  ___| |__   ___ _ __ ___   __ _      |  _ \ ___  __ _(_)___| |_ _ __ _   _
# | ' // _` | |_| |/ / _` | \___ \ / __| '_ \ / _ \ '_ ` _ \ / _` |_____| |_) / _ \/ _` | / __| __| '__| | | |
# | . \ (_| |  _|   < (_| |  ___) | (__| | | |  __/ | | | | | (_| |_____|  _ <  __/ (_| | \__ \ |_| |  | |_| |
# |_|\_\__,_|_| |_|\_\__,_| |____/ \___|_| |_|\___|_| |_| |_|\__,_|     |_| \_\___|\__, |_|___/\__|_|   \__, |
#                                                                                  |___/                |___/

[confluent_schema_registry_logs_mapping(3)]
args = env, label, jolokia_agent_url
definition = inputlookup kafka_infra_inventory | search role=schema-registry env=$env$ label=$label$ name=$jolokia_agent_url$ | rex field=name "//(?<kafka_schema_registry>[^:]*)\:" | table kafka_schema_registry | rename kafka_schema_registry as host
iseval = 0

#   ____             __ _                  _
#  / ___|___  _ __  / _| |_   _  ___ _ __ | |_
# | |   / _ \| '_ \| |_| | | | |/ _ \ '_ \| __|
# | |__| (_) | | | |  _| | |_| |  __/ | | | |_
#  \____\___/|_| |_|_| |_|\__,_|\___|_| |_|\__|
#
#  _  __      __ _           _              _
# | |/ /__ _ / _| | ____ _  | | _____  __ _| |      ___  ___ _ ____   _____ _ __
# | ' // _` | |_| |/ / _` | | |/ / __|/ _` | |_____/ __|/ _ \ '__\ \ / / _ \ '__|
# | . \ (_| |  _|   < (_| | |   <\__ \ (_| | |_____\__ \  __/ |   \ V /  __/ |
# |_|\_\__,_|_| |_|\_\__,_| |_|\_\___/\__, |_|     |___/\___|_|    \_/ \___|_|
#                                        |_|

[confluent_ksql_server_logs_mapping(3)]
args = env, label, jolokia_agent_url
definition = inputlookup kafka_infra_inventory | search role=ksql-server env=$env$ label=$label$ name=$jolokia_agent_url$ | rex field=name "//(?<kafka_ksql_server>[^:]*)\:" | table kafka_ksql_server | rename kafka_ksql_server as host
iseval = 0

#   ____             __ _                  _
#  / ___|___  _ __  / _| |_   _  ___ _ __ | |_
# | |   / _ \| '_ \| |_| | | | |/ _ \ '_ \| __|
# | |__| (_) | | | |  _| | |_| |  __/ | | | |_
#  \____\___/|_| |_|_| |_|\__,_|\___|_| |_|\__|
#
#  _          __ _                             _
# | | ____ _ / _| | ____ _       _ __ ___  ___| |_
# | |/ / _` | |_| |/ / _` |_____| '__/ _ \/ __| __|
# |   < (_| |  _|   < (_| |_____| | |  __/\__ \ |_
# |_|\_\__,_|_| |_|\_\__,_|     |_|  \___||___/\__|
#

[confluent_kafka_rest_logs_mapping(3)]
args = env, label, jolokia_agent_url
definition = inputlookup kafka_infra_inventory | search role=kafka_rest env=$env$ label=$label$ name=$jolokia_agent_url$ | rex field=name "//(?<kafka_rest>[^:]*)\:" | table kafka_rest | rename kafka_rest as host
iseval = 0
